1. 플레이어 클래스를 생성하고 전투를 구현.
1) RPG장르적인 특징은 대부분 전투에서 차이가 남.

2. 플레이어의 State를 구조체화 하고, 아이템에도 State구조체로 능력치를 구현함.
1) 아이템 사용하거나 착용시에 스텟이 변경되는데 일일히 계산하기 번거로우므로, 연산자 오버로딩을 구현함.
2) 연산자오버로딩사용이 어렵다면 일반함수로 구현하기.
3) 랩업을 구현, 경험치 획득, 아이템획득

3. 아이템관리자에서 아이템을 관리함.
1) 각 아이템을 추가시에 직접 하드코딩을 하기에는 번거로움이 많음.
2) 아이템관리자를 이용하여 아이템을 복사하여 사용하면 편리하다.
3) 인터페이스를 디자인할때 사용자/프로그래머 모두 고려하여 작성해야한다.
ex) 사용자 기준: 죽음, 경험치/아이템 뺏어오기
    프로그래머기준: 데미지를입다, 3자 입장에서 처리하는것들
4) 벡터를 사용하는 이유를 명확하게 이해해야함.

4. 마을 구현
1) 장소를 이동하는데 함수안에서 함수를 호출하면 안되는 이유? < 호출스택
2) 스위치문안에 반복문이 없는 이유? < 반복하고있는 동안 입력이 불가함.

5. 상점 구현
1) 플레이어에 판매(자신의 아이템이 소거), 구매(상점의 아이템소거X)
2) 추후 플레이어와 플레이어의 거래를 구현할때는 DB를 사용하는 경우 트랜젝션을 이용해야함.
※트렌젝션: DB가 여러가지 명령어를 수행하는데 모든 명령어가 처리될때까지 모든적용이 일어나지않도록 관리해주는 것.

6. 아이템의 복사와 참조
1) 인벤토리에서 아이템을 복사 하면, 업데이트 반영 및 메모리가 낭비될수있다.
2) 장비함에서 아이템을 포인터로 이용하면 없다는것을 표현할수 있게 된다.
3) 몬스터관리자는 데이터가 공유되면 안되므로 반드시 복사여 처리해야한다.
